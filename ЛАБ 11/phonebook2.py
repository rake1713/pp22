import psycopg2
import csv

conn = psycopg2.connect(
    dbname="rake",
    user="postgres",
    password="2005",  
    host="localhost",
    port="5432"
)
cur = conn.cursor()

# –ö–µ—Å—Ç–µ “õ“±—Ä—É
cur.execute("""
    CREATE TABLE IF NOT EXISTS phonebook (
        id SERIAL PRIMARY KEY,
        name VARCHAR(50),
        phone VARCHAR(20)
    );
""")
conn.commit()

# CSV-—Ç–µ–Ω –∂“Ø–∫—Ç–µ—É
def load_from_csv():
    with open('psycopg2.csv', 'r') as f:
        reader = csv.reader(f)
        next(reader)
        count_added = 0
        count_skipped = 0
        for row in reader:
            if len(row) >= 2:
                name, phone = row[0], row[1]
                
                # –¢–µ–∫—Å–µ—Ä—É: –æ—Å—ã–Ω–¥–∞–π name –∂”ô–Ω–µ phone –±–∞—Ä –º–∞?
                cur.execute("SELECT * FROM phonebook WHERE name = %s AND phone = %s", (name, phone))
                if cur.fetchone():
                    print(f"‚ö†Ô∏è  '{name}' –Ω”©–º—ñ—Ä—ñ –±–∞—Ä –∂–∞–∑–±–∞ –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä. ”®—Ç–∫—ñ–∑—ñ–ª—ñ–ø –∫–µ—Ç—Ç—ñ.")
                    count_skipped += 1
                else:
                    cur.execute("INSERT INTO phonebook (name, phone) VALUES (%s, %s)", (name, phone))
                    count_added += 1
        conn.commit()
        print(f"\n‚úÖ CSV –∂“Ø–∫—Ç–µ–ª–¥—ñ: {count_added} –∂–∞“£–∞ –¥–µ—Ä–µ–∫, {count_skipped} ”©—Ç–∫—ñ–∑—ñ–ª—ñ–ø –∫–µ—Ç—Ç—ñ.")

# “ö–æ–ª–º–µ–Ω –µ–Ω–≥—ñ–∑—É
def insert_manually():
    name = input("–ê—Ç—ã“£: ")
    phone = input("–ù”©–º—ñ—Ä—ñ“£: ")

    # –ù”©–º—ñ—Ä–¥—ñ“£ “õ–∞–π—Ç–∞–ª–∞–Ω—É—ã —Ç–µ–∫—Å–µ—Ä—ñ–ª–µ–¥—ñ
    cur.execute("SELECT * FROM phonebook WHERE phone = %s", (phone,))
    if cur.fetchone():
        print(f"‚ö†Ô∏è  '{phone}' –Ω”©–º—ñ—Ä—ñ –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä. “ö–∞–π—Ç–∞–¥–∞–Ω –Ω”©–º—ñ—Ä –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.")
    else:
        cur.execute("INSERT INTO phonebook (name, phone) VALUES (%s, %s)", (name, phone))
        conn.commit()
        print("‚úÖ –î–µ—Ä–µ–∫ “õ–æ—Å—ã–ª–¥—ã!")

# –ñ–∞“£–∞—Ä—Ç—É
def update_entry():
    name = input("“ö–∞–π –µ—Å—ñ–º–¥—ñ ”©–∑–≥–µ—Ä—Ç–µ–º—ñ–∑ (–∞“ì—ã–º–¥–∞“ì—ã –∞—Ç—ã): ")
    
    cur.execute("SELECT * FROM phonebook WHERE name = %s", (name,))
    result = cur.fetchone()
    
    if result:
        print("\n“ö–∞–Ω–¥–∞–π –¥–µ—Ä–µ–∫—Ç—ñ ”©–∑–≥–µ—Ä—Ç–µ—Å—ñ–∑?")
        print("1. –ê—Ç—ã–Ω")
        print("2. –ù”©–º—ñ—Ä—ñ–Ω")
        print("3. –ï–∫–µ—É—ñ–Ω –¥–µ")
        choice = input("–¢–∞“£–¥–∞“£—ã–∑ (1-3): ")

        if choice == "1":
            new_name = input("–ñ–∞“£–∞ –∞—Ç—ã: ")
            cur.execute("UPDATE phonebook SET name = %s WHERE name = %s", (new_name, name))
            conn.commit()
            print("‚úÖ –ê—Ç—ã –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã!")

        elif choice == "2":
            new_phone = input("–ñ–∞“£–∞ –Ω”©–º—ñ—Ä—ñ: ")
            cur.execute("UPDATE phonebook SET phone = %s WHERE name = %s", (new_phone, name))
            conn.commit()
            print("‚úÖ –ù”©–º—ñ—Ä—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã!")

        elif choice == "3":
            new_name = input("–ñ–∞“£–∞ –∞—Ç—ã: ")
            new_phone = input("–ñ–∞“£–∞ –Ω”©–º—ñ—Ä—ñ: ")
            cur.execute("UPDATE phonebook SET name = %s, phone = %s WHERE name = %s", (new_name, new_phone, name))
            conn.commit()
            print("‚úÖ –ê—Ç—ã –º–µ–Ω –Ω”©–º—ñ—Ä—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã!")

        else:
            print("‚ö†Ô∏è “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É! –ú”ô–∑—ñ—Ä–¥–µ–Ω —Ç–µ–∫ 1, 2 –Ω–µ–º–µ—Å–µ 3 —Ç–∞“£–¥–∞“£—ã–∑.")
    else:
        print("‚ö†Ô∏è –û–Ω–¥–∞–π –µ—Å—ñ–º–¥—ñ –∞–¥–∞–º –∂–æ“õ.")

# –Ü–∑–¥–µ—É
def query_data():
    filter_name = input("–ê—Ç—ã –±–æ–π—ã–Ω—à–∞ —ñ–∑–¥–µ—É: ")
    cur.execute("SELECT * FROM phonebook WHERE name ILIKE %s", ('%' + filter_name + '%',))
    results = cur.fetchall()
    
    if results:
        for row in results:
            print(row)
    else:
        print("–û–Ω–¥–∞–π –µ—Å—ñ–º–¥—ñ –∞–¥–∞–º –∂–æ“õ.")


# ”®—à—ñ—Ä—É –∂”ô–Ω–µ ID “õ–∞–π—Ç–∞ –Ω”©–º—ñ—Ä–ª–µ—É 
def delete_entry():
    print("\nüîç “ö–∞–ª–∞–π ”©—à—ñ—Ä–µ—Å—ñ–∑?")
    print("1. –ê—Ç—ã –∞—Ä“õ—ã–ª—ã")
    print("2. –ù”©–º—ñ—Ä—ñ –∞—Ä“õ—ã–ª—ã")
    choice = input("–¢–∞“£–¥–∞—É (1-2): ")

    if choice == "1":
        identifier = input("–ö—ñ–º–¥—ñ ”©—à—ñ—Ä–µ—Å—ñ–∑ (–∞—Ç—ã): ")
        cur.execute("SELECT * FROM phonebook WHERE name = %s", (identifier,))
    elif choice == "2":
        identifier = input("“ö–∞–π –Ω”©–º—ñ—Ä–¥—ñ ”©—à—ñ—Ä–µ—Å—ñ–∑: ")
        cur.execute("SELECT * FROM phonebook WHERE phone = %s", (identifier,))
    else:
        print("‚ö†Ô∏è “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É!")
        return

    result = cur.fetchone()

    if result:
        if choice == "1":
            cur.execute("DELETE FROM phonebook WHERE name = %s", (identifier,))
        else:
            cur.execute("DELETE FROM phonebook WHERE phone = %s", (identifier,))
        conn.commit()
        print("üóëÔ∏è ”®—à—ñ—Ä—ñ–ª–¥—ñ!")

        # ID “õ–∞–π—Ç–∞ –Ω”©–º—ñ—Ä–ª–µ—É
        try:
            cur.execute("""
                CREATE TABLE temp_phonebook (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR(50),
                    phone VARCHAR(20)
                );
            """)
            cur.execute("INSERT INTO temp_phonebook (name, phone) SELECT name, phone FROM phonebook;")
            cur.execute("DROP TABLE phonebook;")
            cur.execute("ALTER TABLE temp_phonebook RENAME TO phonebook;")
            conn.commit()
        except Exception as e:
            conn.rollback()
            print("‚ö†Ô∏è “ö–∞–π—Ç–∞ –Ω”©–º—ñ—Ä–ª–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ:", e)
    else:
        print("‚ö†Ô∏è –û–Ω–¥–∞–π –¥–µ—Ä–µ–∫ —Ç–∞–±—ã–ª–º–∞–¥—ã.")
        
def paginate_data(limit, offset):
    try:
        cur.execute("SELECT * FROM phonebook ORDER BY id ASC LIMIT %s OFFSET %s", (limit, offset))
        results = cur.fetchall()

        if results:
            print(f"\nüìÑ {offset + 1}-–∂–∞–∑–±–∞–¥–∞–Ω –±–∞—Å—Ç–∞–ø {offset + len(results)}-–∂–∞–∑–±–∞“ì–∞ –¥–µ–π—ñ–Ω:")
            print("+-----+-----------------------+---------------------+")
            print("|  ID | –ê—Ç—ã                   | –ù”©–º—ñ—Ä—ñ              |")
            print("+-----+-----------------------+---------------------+")
            for row in results:
                print(f"| {row[0]:<3} | {row[1]:<21} | {row[2]:<19} |")
                print("+-----+-----------------------+---------------------+")
        else:
            print("üì≠ –ë“±–ª –±–µ—Ç—Ç–µ –¥–µ—Ä–µ–∫ –∂–æ“õ.")
    except Exception as e:
        print("‚ö†Ô∏è “ö–∞—Ç–µ:", e)        

# –ö–µ—Å—Ç–µ–Ω—ñ –∫”©—Ä—Å–µ—Ç—É
def view_data():
    print("\nüìã “ö–∞–ª–∞–π –∫”©—Ä—Å–µ—Ç–µ–º—ñ–∑?")
    print("1. –ë–∞—Ä–ª—ã“õ –∂–∞–∑–±–∞–ª–∞—Ä")
    print("2. –®–∞–±–ª–æ–Ω –∞—Ä“õ—ã–ª—ã —ñ–∑–¥–µ—É")

    choice = input("–¢–∞“£–¥–∞ (1-2): ")

    if choice == "1":
        cur.execute("SELECT * FROM phonebook ORDER BY id ASC")
        results = cur.fetchall()

        if results:
            print("\nüìã PHONEBOOK –ñ–ê–ó–ë–ê–õ–ê–†–´:")
            print("+-----+-----------------------+---------------------+")
            print("|  ID | –ê—Ç—ã                   | –ù”©–º—ñ—Ä—ñ              |")
            print("+-----+-----------------------+---------------------+")
            for row in results:
                print(f"| {row[0]:<3} | {row[1]:<21} | {row[2]:<19} |")
                print("+-----+-----------------------+---------------------+")
        else:
            print("üìÅ –ö–µ—Å—Ç–µ–¥–µ –¥–µ—Ä–µ–∫—Ç–µ—Ä –∂–æ“õ.")
    
    elif choice == "2":
        print("\nüîé “ö–∞–π ”©—Ä—ñ—Å –±–æ–π—ã–Ω—à–∞ —ñ–∑–¥–µ–π–º—ñ–∑?")
        print("1. ID")
        print("2. –ê—Ç—ã")
        print("3. –ù”©–º—ñ—Ä—ñ")
        field_choice = input("–¢–∞“£–¥–∞ (1-3): ")

        if field_choice == "1":
            pattern = input("ID –º”ô–Ω—ñ–Ω –µ–Ω–≥—ñ–∑: ")
            cur.execute("SELECT * FROM phonebook WHERE CAST(id AS TEXT) ILIKE %s", (f"%{pattern}%",))
        elif field_choice == "2":
            pattern = input("–ê—Ç—ã–Ω –µ–Ω–≥—ñ–∑ (—à–∞–±–ª–æ–Ω): ")
            cur.execute("SELECT * FROM phonebook WHERE name ILIKE %s", (f"%{pattern}%",))
        elif field_choice == "3":
            pattern = input("–ù”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑ (—à–∞–±–ª–æ–Ω): ")
            cur.execute("SELECT * FROM phonebook WHERE phone ILIKE %s", (f"%{pattern}%",))
        else:
            print("‚ö†Ô∏è “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É!")
            return
        
        results = cur.fetchall()

        if results:
            print("\nüîé –Ü–ó–î–ï–£ –ù”ò–¢–ò–ñ–ï–°–Ü:")
            print("+-----+-----------------------+---------------------+")
            print("|  ID | –ê—Ç—ã                   | –ù”©–º—ñ—Ä—ñ              |")
            print("+-----+-----------------------+---------------------+")
            for row in results:
                print(f"| {row[0]:<3} | {row[1]:<21} | {row[2]:<19} |")
                print("+-----+-----------------------+---------------------+")
        else:
            print("üì≠ –ï—à—Ç–µ“£–µ —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    
    else:
        print("‚ö†Ô∏è “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É! 1 –Ω–µ–º–µ—Å–µ 2 –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.")
        
        
        
def view_sorted(order_by, ascending=True):
    order = "ASC" if ascending else "DESC"
    try:
        cur.execute(f"SELECT * FROM phonebook ORDER BY {order_by} {order}")
        results = cur.fetchall()
        if results:
            print("\nüìã –°“∞–†–´–ü–¢–ê–õ“í–ê–ù PHONEBOOK:")
            print("+-----+-----------------------+---------------------+")
            print("|  ID | –ê—Ç—ã                   | –ù”©–º—ñ—Ä—ñ              |")
            print("+-----+-----------------------+---------------------+")
            for row in results:
                print(f"| {row[0]:<3} | {row[1]:<21} | {row[2]:<19} |")
                print("+-----+-----------------------+---------------------+")
        else:
            print("üìÅ –ö–µ—Å—Ç–µ–¥–µ –¥–µ—Ä–µ–∫—Ç–µ—Ä –∂–æ“õ.")
    except Exception as e:
        print("‚ö†Ô∏è –°“±—Ä—ã–ø—Ç–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ:", e)
        
def sort_menu():
    while True:
        print("\nüîΩ –°“∞–†–´–ü–¢–ê–£ –ú”ò–ó–Ü–†–Ü:")
        print("1. ID –±–æ–π—ã–Ω—à–∞ (”©—Å—É)")
        print("2. ID –±–æ–π—ã–Ω—à–∞ (–∫–µ–º—É)")
        print("3. –ê—Ç—ã –±–æ–π—ã–Ω—à–∞ (A-Z)")
        print("4. –ê—Ç—ã –±–æ–π—ã–Ω—à–∞ (Z-A)")
        print("5. –ù”©–º—ñ—Ä—ñ –±–æ–π—ã–Ω—à–∞ (”©—Å—É)")
        print("6. –ù”©–º—ñ—Ä—ñ –±–æ–π—ã–Ω—à–∞ (–∫–µ–º—É)")
        print("0. üîô –ê—Ä—Ç“õ–∞ “õ–∞–π—Ç—É")

        choice = input("–¢–∞“£–¥–∞ (0-6): ")

        if choice == "1":
            view_sorted("id", True)
        elif choice == "2":
            view_sorted("id", False)
        elif choice == "3":
            view_sorted("name", True)
        elif choice == "4":
            view_sorted("name", False)
        elif choice == "5":
            view_sorted("phone", True)
        elif choice == "6":
            view_sorted("phone", False)
        elif choice == "0":
            break
        else:
            print("‚ö†Ô∏è “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É! “ö–∞–π—Ç–∞–¥–∞–Ω –∫”©—Ä—ñ“£—ñ–∑.")
        
# –ú”ô–∑—ñ—Ä
def print_menu():
    menu_title = "üì±  PHONEBOOK –ú”ò–ó–Ü–†–Ü"
    line = "=" * 42
    print("\n" + line.center(42))
    print(menu_title.center(42))
    print(line.center(42))

    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".ljust(21) + "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".rjust(21))
    print("‚îÇ  1  üìÇ CSV-—Ç–µ–Ω –∂“Ø–∫—Ç–µ—É        ‚îÇ".ljust(21) + "‚îÇ  2  ‚úçÔ∏è  “ö–æ–ª–º–µ–Ω –µ–Ω–≥—ñ–∑—É         ‚îÇ".rjust(21))
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".ljust(21) + "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".rjust(21))

    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".ljust(21) + "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".rjust(21))
    print("‚îÇ  3  üîÑ –ñ–∞“£–∞—Ä—Ç—É               ‚îÇ".ljust(21) + "‚îÇ  4  üîç –Ü–∑–¥–µ—É                 ‚îÇ".rjust(21))
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".ljust(21) + "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".rjust(21))

    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".ljust(21) + "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".rjust(21))
    print("‚îÇ  5  ‚ùå ”®—à—ñ—Ä—É                 ‚îÇ".ljust(21) + "‚îÇ  6  üìú –ö–µ—Å—Ç–µ–Ω—ñ –∫”©—Ä—É          ‚îÇ".rjust(21))
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".ljust(21) + "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".rjust(21))

    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".ljust(21) + "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê".rjust(21))
    print("‚îÇ  7  üìë –ë–µ—Ç—Ç–µ—Ä–º–µ–Ω “õ–∞—Ä–∞—É       ‚îÇ".ljust(21) + "‚îÇ  0  üö™ –®—ã“ì—É                  ‚îÇ".rjust(21))
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".ljust(21) + "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò".rjust(21))

    print(line.center(42))
    
while True:
    print_menu()
    choice = input("–¢–∞“£–¥–∞ (0-7): ")

    if choice == "1":
        load_from_csv()
    elif choice == "2":
        insert_manually()
    elif choice == "3":
        update_entry()
    elif choice == "4":
        query_data()
    elif choice == "5":
        delete_entry()
    elif choice == "6":
        view_data() 
    elif choice == "7":
        try:
            limit = int(input("–ë—ñ—Ä –±–µ—Ç—Ç–µ “õ–∞–Ω—à–∞ –∂–∞–∑–±–∞ –∫”©—Ä—Å–µ—Ç–µ–º—ñ–∑? (–º—ã—Å: 5): "))
            offset = 0
            while True:
                paginate_data(limit, offset)
                print("\n‚û°Ô∏è –ö–µ–ª–µ—Å—ñ –±–µ—Ç–∫–µ ”©—Ç—É “Ø—à—ñ–Ω 'n', –∞–ª–¥—ã“£“ì—ã –±–µ—Ç “Ø—à—ñ–Ω 'p', —à—ã“ì—É “Ø—à—ñ–Ω 'q' –±–∞—Å—ã“£—ã–∑.")
                nav = input("–¢–∞“£–¥–∞—É: ").lower()
                if nav == 'n':
                    offset += limit
                elif nav == 'p':
                    offset = max(0, offset - limit)
                elif nav == 'q':
                    break
                else:
                    print("‚ö†Ô∏è –ë–µ–ª–≥—ñ—Å—ñ–∑ —Ç–∞“£–¥–∞—É!")
        except ValueError:
            print("‚ö†Ô∏è “ö–∞—Ç–µ! –¢–µ–∫ –±“Ø—Ç—ñ–Ω —Å–∞–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.")
    elif choice == "0":
        print("üì§ –®—ã“ì—É –æ—Ä—ã–Ω–¥–∞–ª–¥—ã. –°–∞—É –±–æ–ª—ã“£—ã–∑!")
        break
    else:
        print("‚ö†Ô∏è  “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É! “ö–∞–π—Ç–∞–¥–∞–Ω –∫”©—Ä—ñ“£—ñ–∑.")
cur.close()
conn.close()


